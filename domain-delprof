#!/usr/bin/env python3

import os
import getpass
import argparse
import shutil
import subprocess
import configparser

# check for admin privileges
if getpass.getuser() != 'root' and os.geteuid != 0:
    print('error: this command must be run as root user')
    exit(1)

config = configparser.ConfigParser()
if config.read('/etc/ad/settings.cfg') == []:
    print('error: cannot read configuration file')
    exit(1)

SAMBA_PATH = config['GLOBAL']['samba_path']
SERVER_NAME = config['GLOBAL']['server_name']
USERS_FS_PATH = config['GLOBAL']['home_dirs_path']
DOMAIN_NAME = config['GLOBAL']['nt_domain_name']

parser = argparse.ArgumentParser()
parser.add_argument("GROUP", help="group name to delete profiles", nargs='?', default='')
parser.add_argument("-u", "--username", help="delete profile for single user")
args = parser.parse_args()

if args.username:
    print(f'now deleting profiles for user {args.username}..')
    shutil.rmtree(f'{USERS_FS_PATH}/{args.username}/.profiles', ignore_errors=True)
    print(f'profiles for user {args.username} deleted!')
    exit(0)

if args.GROUP:
    process = subprocess.Popen([SAMBA_PATH, 'group', 'listmembers', args.GROUP], stdout=subprocess.PIPE)
    p_output = process.communicate()[0]
    output = p_output.decode('utf-8').splitlines()

    for user in output:
        print(f'now deleting profiles for user {user}..')
        shutil.rmtree(f'{USERS_FS_PATH}/{user}/.profiles', ignore_errors=True)
        print(f'profiles for user {user} deleted!')
    
    exit(0)